name: CMake-Windows

on:
  push:
    branches:
      - v1.2.0-build

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    # cache/install dependencies
    # see - https://raymii.org/s/articles/Github_Actions_cpp_boost_cmake_speedup.html

    - name: CMake Action
      uses: threeal/cmake-action@v1.3.0

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
        mkdir "${{github.workspace}}/build" -Force
        Set-Location -Path "${{github.workspace}}/build"
        cmake $GITHUB_WORKSPACE -DCMAKE_INSTALL_PREFIX=./release -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build . --target install --config $BUILD_TYPE

    - name: Create Artifact
      working-directory: ${{github.workspace}}
      run: |
        Compress-Archive -Path .\build -DestinationPath release-windows.zip

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: release-windows
        path: ${{github.workspace}}/release-windows.zip
